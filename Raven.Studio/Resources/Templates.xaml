<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
					xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
					xmlns:f="clr-namespace:Raven.Studio.Framework"
					xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
					xmlns:ti="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
					xmlns:docs="clr-namespace:Raven.Studio.Features.Documents"
					xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Styles.xaml" />
		<ResourceDictionary Source="ControlTemplates/Menu.xaml" />
		<ResourceDictionary Source="ControlTemplates/Indexes.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="BackButton"
		   TargetType="Button">
		<Setter Property="Width"
				Value="30" />
		<Setter Property="Height"
				Value="30" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="root"
						  Opacity="0.4">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.0010000"
																	   Storyboard.TargetName="root"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00"
																  Value="0.8" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.0010000"
																	   Storyboard.TargetName="root"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00"
																  Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Duration="00:00:00.0010000"
																	   Storyboard.TargetName="root"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00"
																  Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse Fill="{TemplateBinding Background}"
								 Stroke="{TemplateBinding BorderBrush}"
								 StrokeThickness="1.5" />
						<Path Data="M4.9038086,1.9359312 L6.3975601,1.9359312 L2.954689,5.3788023 L9.8505859,5.3788023 L9.8505859,6.4422789 L2.954689,6.4422789 L6.3975601,9.88515 L4.9038086,9.88515 L0.92919922,5.9105406 z"
							  Stretch="Uniform"
							  Fill="{TemplateBinding BorderBrush}"
							  Margin="5" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="toolkit:TransitioningContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="toolkit:TransitioningContentControl">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PresentationStates">
								<VisualState x:Name="DefaultTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="1" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="UpTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="30" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="1" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="-30" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DownTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="-40" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="1" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="40" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="-40" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="1" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="40" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="CurrentContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="30" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="1" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
																	   Storyboard.TargetName="PreviousContentPresentationSite"
																	   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.300"
																  Value="-30" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<ContentPresenter x:Name="PreviousContentPresentationSite"
											  Content="{x:Null}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform />
										<TranslateTransform />
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
							<ContentPresenter x:Name="CurrentContentPresentationSite"
											  Content="{x:Null}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform />
										<TranslateTransform />
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ItemsPanelTemplate x:Key="FluidWrapPanel">
		<toolkit:WrapPanel>
			<i:Interaction.Behaviors>
				<ei:FluidMoveBehavior AppliesTo="Children"
									  Duration="0:0:0.5">
					<ei:FluidMoveBehavior.EaseY>
						<CircleEase EasingMode="EaseInOut" />
					</ei:FluidMoveBehavior.EaseY>
					<ei:FluidMoveBehavior.EaseX>
						<CubicEase EasingMode="EaseInOut" />
					</ei:FluidMoveBehavior.EaseX>
				</ei:FluidMoveBehavior>
			</i:Interaction.Behaviors>
		</toolkit:WrapPanel>
	</ItemsPanelTemplate>

	<Style TargetType="ListBoxItem"
		   x:Name="DocumentListItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border x:Name="frame"
							Margin="0 0 6 6"
							Padding="2"
							cm:Action.TargetWithoutContext="EditDocument"
							f:DoubleClickEvent.AttachAction="Execute($dataContext)"
							CornerRadius="2"
							Background="#0333"
							BorderThickness="2"
							BorderBrush="#0999">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation To="#F999"
														Storyboard.TargetProperty="(Panel.BorderBrush).(SolidColorBrush.Color)"
														Storyboard.TargetName="frame"
														Duration="0" />
										<DoubleAnimation To="1"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 Storyboard.TargetName="overlay"
														 Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation To="#F666"
														Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														Storyboard.TargetName="frame"
														Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<ToolTipService.ToolTip>
							<ContentControl cm:View.Model="{Binding}"
											cm:View.Context="Tooltip" />
						</ToolTipService.ToolTip>
						<ti:ContextMenuService.ContextMenu>
							<ti:ContextMenu>
								<ti:MenuItem Header="Edit Document"
											 cm:Action.TargetWithoutContext="EditDocument"
											 cm:Message.Attach="[Click]=[Execute($dataContext)]" />

								<ti:MenuItem Header="Copy Document Id to Clipboard"
											 Tag="{Binding Id}"
											 cm:Action.TargetWithoutContext="CopyDocumentIdToClipboard"
											 cm:Message.Attach="[Click]=[Execute($this.Tag)]" />

								<ti:Separator />

								<ti:MenuItem Header="Delete Document"
											 Tag="{Binding Id}"
											 cm:Action.TargetWithoutContext="DeleteDocument"
											 cm:Message.Attach="[Click]=[Execute($this.Tag)]" />
							</ti:ContextMenu>
						</ti:ContextMenuService.ContextMenu>

						<Grid Width="120"
							  Height="60">
							<docs:DocumentTemplateSelector Content="{Binding Mode=OneTime}"
														   VerticalContentAlignment="Stretch"
														   HorizontalContentAlignment="Stretch" />
							<StackPanel x:Name="overlay"
										Opacity="0"
										Orientation="Horizontal"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom">
								<Button Content="edit"
										cm:Action.TargetWithoutContext="EditDocument"
										cm:Message.Attach="Execute($dataContext)"
										Style="{StaticResource SmallIconButton}"
										ToolTipService.ToolTip="click here to edit the document"
										Margin="0,0,4,4">
									<!--
										TODO: this causes an odd error, uncomment and run to see
										<Image Source="/Resources/Images/pencil.png"
											   Height="16"
											   Width="16" />-->
								</Button>
							</StackPanel>
						</Grid>

					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListBox"
		   x:Name="DocumentList">
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource DocumentListItem}" />
		<Setter Property="ItemsPanel"
				Value="{StaticResource FluidWrapPanel}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="SelectionMode"
				Value="Extended" />
		<Setter Property="BorderThickness"
				Value="0" />
	</Style>

</ResourceDictionary>